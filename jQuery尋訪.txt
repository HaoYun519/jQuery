================================jQuery 尋訪==============================================================================

jQuery 尋訪，意为"移动"，用于根据其相对于其他元素的关系来"查找"（或选取）
HTML 元素。以某项选择开始，并沿着这个选择移动，直到抵达您期望的元素为止。

通过 jQuery 尋訪，您能够从被选（当前的）元素开始，轻松地在家族树中向上移动（祖先），
向下移动（子孙），水平移动（同胞）。这种移动被称为对 DOM 进行尋訪。

================================尋訪祖先==============================================================================

向上尋訪 DOM 树，以查找元素的祖先：

parent()
parents()
parentsUntil()

parent() 方法返回被选元素的直接父元素。
下面的例子返回每个 <span> 元素的直接父元素：

    $(document).ready(function(){
      $("span").parent();
    });

parents() 方法返回被选元素的所有祖先元素，一路向上直到文档的根元素 (<html>)。
下面的例子返回所有 <span> 元素的所有祖先：

    $(document).ready(function(){
      $("span").parents();
    });

parentsUntil() 方法返回介于两个给定元素之间的所有祖先元素。
下面的例子返回介于 <span> 与 <div> 元素之间的所有祖先元素：

    $(document).ready(function(){
      $("span").parentsUntil("div");
    });

================================尋訪后代==============================================================================

通过 jQuery，您能够向下遍历 DOM 树，以查找元素的后代。

children()
find()

children() 方法返回被选元素的所有直接子元素。
该方法只会向下一级对 DOM 树进行遍历。
下面的例子返回每个 <div> 元素的所有直接子元素：

    $(document).ready(function(){
      $("div").children();
    });

find() 方法返回被选元素的后代元素，一路向下直到最后一个后代。
下面的例子返回属于 <div> 后代的所有 <span> 元素：

    $(document).ready(function(){
      $("div").find("span");
    });

=================================尋訪同胞==============================================================================

通过 jQuery，您能够在 DOM 树中尋訪元素的同胞元素。
有许多有用的方法让我们在 DOM 树进行水平遍历：

siblings()
next()
nextAll()
nextUntil()
prev()
prevAll()
prevUntil()
jQuery siblings() 方法

siblings() 方法返回被选元素的所有同胞元素。
下面的例子返回 <h2> 的所有同胞元素：

  $(document).ready(function(){
    $("h2").siblings();
  });

next() 方法返回被选元素的下一个同胞元素。该方法只返回一个元素。
下面的例子返回 <h2> 的下一个同胞元素：

  $(document).ready(function(){
    $("h2").next();
  });

nextAll() 方法返回被选元素的所有跟随的同胞元素。
下面的例子返回 <h2> 的所有跟随的同胞元素：

  $(document).ready(function(){
    $("h2").nextAll();
  });

nextUntil() 方法返回介于两个给定参数之间的所有跟随的同胞元素。
下面的例子返回介于 <h2> 与 <h6> 元素之间的所有同胞元素：

  $(document).ready(function(){
    $("h2").nextUntil("h6");
  });

jQuery prev(), prevAll() & prevUntil() 方法
prev(), prevAll() 以及 prevUntil() 方法的工作方式与上面的方法类似，
只不过方向相反而已：它们返回的是前面的同胞元素（在 DOM 树中沿着同胞之前元素遍历，而不是之后元素遍历）。

=================================過濾==============================================================================

三个最基本的过滤方法是：first(), last() 和 eq()，
它们允许您基于其在一组元素中的位置来选择一个特定的元素。
其他过滤方法：
filter() 和 not() 允许您选取匹配或不匹配某项指定标准的元素。

first() 方法返回被选元素的首个元素。
下面的例子选取首个 <div> 元素内部的第一个 <p> 元素：

  $(document).ready(function(){
    $("div p").first();
  });

last() 方法返回被选元素的最后一个元素。
下面的例子选择最后一个 <div> 元素中的最后一个 <p> 元素：

  $(document).ready(function(){
    $("div p").last();
  });

eq() 方法返回被选元素中带有指定索引号的元素。
索引号从 0 开始，因此首个元素的索引号是 0 而不是 1。
下面的例子选取第二个 <p> 元素（索引号 1）：

  $(document).ready(function(){
    $("p").eq(1);
  });

filter() 方法允许您规定一个标准。
不匹配这个标准的元素会被从集合中删除，匹配的元素会被返回。
下面的例子返回带有类名 "url" 的所有 <p> 元素：

  $(document).ready(function(){
    $("p").filter(".url");
  });

not() 方法返回不匹配标准的所有元素。
提示：not() 方法与 filter() 相反。
下面的例子返回不带有类名 "url" 的所有 <p> 元素：

  $(document).ready(function(){
    $("p").not(".url");
  });